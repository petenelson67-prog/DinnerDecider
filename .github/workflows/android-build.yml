name: Build Android APK

on:
  workflow_dispatch: {}   # run manually from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo root
        run: |
          pwd
          ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android platforms/tools (API 34)
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      # Find the first zip in the repo (your uploaded project) and unzip to DinnerDecider/
      - name: Unzip project
        id: unzip
        run: |
          ZIP=$(ls -1 *.zip | head -n 1 || true)
          if [ -z "$ZIP" ]; then
            echo "No ZIP found at repo root. Make sure your project ZIP is in the root of the repo."
            exit 1
          fi
          echo "Using ZIP: $ZIP"
          unzip -q "$ZIP" -d DinnerDecider
          echo "Unzipped to DinnerDecider/"
          ls -la DinnerDecider
          echo "gradle files in DinnerDecider:"
          ls -la DinnerDecider | grep -E 'gradle|settings|build.gradle|.kts' || true

      # Install Gradle 8.7 (since the ZIP doesnâ€™t include a wrapper)
      - name: Install Gradle via SDKMAN
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          gradle --version

      # Optional: inject Places key if you set a repo secret
      - name: Write local.properties (optional)
        if: env.PLACES_API_KEY != ''
        run: |
          echo "PLACES_API_KEY=${{ env.PLACES_API_KEY }}" > DinnerDecider/local.properties
          echo "Wrote local.properties"
        env:
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}

      # Build with diagnostics
      - name: Build debug APK
        working-directory: DinnerDecider
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          echo "Project tree (top-level):"
          ls -la
          echo "App module tree (if present):"
          ls -la app || true
          echo "Running 'gradle assembleDebug' with info and stacktrace"
          gradle --no-daemon --info --stacktrace assembleDebug

      # Show where APKs landed
      - name: List outputs
        run: |
          echo "Listing all APKs under DinnerDecider/"
          find DinnerDecider -type f -name "*.apk" -print || true
          echo "Listing app/build/outputs:"
          ls -R DinnerDecider/app/build/outputs || true

      # Upload any debug APK found
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DinnerDecider-debug-apk
          path: |
            DinnerDecider/app/build/outputs/apk/**/app-*.apk
            DinnerDecider/**/build/outputs/apk/**/app-*.apk
          if-no-files-found: error
