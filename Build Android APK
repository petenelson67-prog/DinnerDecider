name: Build Android APK

on:
  workflow_dispatch: {}   # Run it manually from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    env:
      JAVA_TOOL_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -Dfile.encoding=UTF-8'"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo contents
        run: |
          pwd
          ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android platforms/tools (API 34)
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Unzip project to DinnerDecider/
        id: unzip
        run: |
          ZIP=$(ls -1 *.zip | head -n 1 || true)
          if [ -z "$ZIP" ]; then
            echo "No ZIP found at repo root. Add your project ZIP to the repository root."
            exit 1
          fi
          echo "Using ZIP: $ZIP"
          unzip -q "$ZIP" -d DinnerDecider
          echo "Top of DinnerDecider/:"
          ls -la DinnerDecider
          test -f DinnerDecider/settings.gradle.kts || { echo "settings.gradle.kts not found under DinnerDecider/"; exit 1; }
          test -d DinnerDecider/app || { echo "app/ module not found under DinnerDecider/"; exit 1; }

      # Optional: put your Places key into local.properties (set a repo secret named PLACES_API_KEY)
      - name: Write local.properties (optional)
        if: env.PLACES_API_KEY != ''
        run: |
          echo "PLACES_API_KEY=${{ env.PLACES_API_KEY }}" > DinnerDecider/local.properties
          echo "Created DinnerDecider/local.properties"
        env:
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}

      # Install a known-good Gradle and generate wrapper in the project
      - name: Install Gradle via SDKMAN and generate wrapper
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          gradle --version
          cd DinnerDecider
          gradle wrapper --gradle-version 8.7
          ./gradlew --version

      - name: Build debug APK (with diagnostics)
        working-directory: DinnerDecider
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          echo "Root files:"
          ls -la
          echo "App module:"
          ls -la app || true
          echo "Running ./gradlew assembleDebug with info + stacktrace"
          ./gradlew --info --stacktrace assembleDebug

      - name: List APK outputs
        run: |
          echo "Searching for APKs..."
          find DinnerDecider -type f -name "*.apk" -print || true
          echo "Outputs directory tree:"
          ls -R DinnerDecider/app/build/outputs || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DinnerDecider-debug-apk
          path: |
            DinnerDecider/app/build/outputs/apk/**/app-*.apk
            DinnerDecider/**/build/outputs/apk/**/app-*.apk
          if-no-files-found: error
